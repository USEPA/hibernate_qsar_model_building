-- Export all predictions for asif:
-- CREATE MATERIALIZED VIEW mv_predicted_data as
select
       row_number() over (order by dr.dtxsid, p."name",s.name) as id,
--        row_number() over (order by dr.dtxsid, s.name) as id,
       dr.dtxsid,dr.dtxcid,dr.smiles,
       pd.canon_qsar_smiles,
       dr.generic_substance_updated_at,
       p.name_ccd as prop_name,
       'predicted' as prop_type,
       pc.name as prop_category,
       p.description as property_description,
       m.name_ccd as model_name,
       m.id as model_id,
       m.has_qmrf,
       s.name as source_name,
       s.description as source_description,
       pd.experimental_value,
       pd.experimental_string,
       pd.prediction_value as prediction_value,
       u.abbreviation_ccd as unit,
       prediction_string,
       prediction_error,
       adm.name as AD_method,
       qpad.applicability_value as AD_value,
       qpad.conclusion as AD_conclusion,
       qpad.reasoning as AD_reasoning,
       case when s.name ='OPERA2.8' then 'OPERA Global Index' end as AD_method_global,
       qpad2.applicability_value as AD_value_global,
       qpad2.conclusion as AD_conclusion_global,
       qpad2.reasoning as AD_reasoning_global,
       m.has_qmrf,
       case when m.has_qmrf is true then CONCAT('https://ctx-api-dev.ccte.epa.gov/chemical/property/model/file/search/?modelId=',m.id,'&typeId=1') end as qmrf_url,
       current_date as export_date,
       '1.3.0' as data_version
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.sources s on m.fk_source_id = s.id
join qsar_datasets.datasets d on d."name" =m.dataset_name
join qsar_datasets.properties p on p.id=d.fk_property_id
join qsar_datasets.units u on u.id=d.fk_unit_id_contributor
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
left join qsar_models.qsar_predicted_ad_estimates qpad on pd.id = qpad.fk_predictions_dashboard_id and qpad.fk_ad_method_id=m.fk_ad_method
left join qsar_models.qsar_predicted_ad_estimates qpad2 on pd.id = qpad2.fk_predictions_dashboard_id and qpad2.fk_ad_method_id=1
left join qsar_models.ad_methods adm on m.fk_ad_method = adm.id
left join qsar_datasets.properties_in_categories pic on p.id = pic.fk_property_id
left join qsar_datasets.property_categories pc on pic.fk_property_category_id = pc.id

where dr.fk_dsstox_snapshot_id=2 -- 2024-11-12 snapshot
--   and s.name='Percepta2023.1.2'
  and s.name='OPERA2.8'
--   and (s.name='OPERA2.8' or s.name='Percepta2023.1.2') --omit sample records from other software
--   and dr.dtxsid='DTXSID7021360'
-- and dr.dtxsid='DTXSID7020182' -- bisphenol-a
-- and dr.dtxcid='DTXCID505'
-- and dr.dtxsid='DTXSID00943887'
-- and dr.dtxsid='DTXSID3039242' -- benzene
-- and dr.dtxsid='DTXSID50281842' -- percepta not in mongo
-- and dr.dtxsid='DTXSID001000007' -- null values in summary table
-- and dr.dtxsid='DTXSID7020005'-- has TEST prediction outside AD for ST
-- and dr.dtxcid='DTXCID3054' -- salt
-- and p.name in ('Water solubility','Vapor pressure','Melting point','Boiling point','LogKow: Octanol-Water','Henry''s law constant')
-- order by dr.dtxsid, p."name",s.name -- this line slows things down when getting all records
-- order by dr.dtxsid -- this line slows things down when getting all records
-- limit 100
;

refresh materialized view mv_predicted_data;
VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.predictions_dashboard;

GRANT SELECT ON mv_predicted_data TO arashid;
GRANT SELECT ON mv_predicted_data TO app_pentaho;
create index mv_predicted_data_dtxsid_index  on mv_predicted_data (dtxsid);
comment on materialized view mv_predicted_data is 'QSAR model predictions materialized view';
comment on column mv_predicted_data.id is 'Autogenerated id for sorting';
comment on column mv_predicted_data.dtxsid is 'DSSTox Substance id';
comment on column mv_predicted_data.dtxcid is 'DSSTox Compound id';
comment on column mv_predicted_data.smiles is 'SMILES structure used to generate the prediction';
comment on column mv_predicted_data.canon_qsar_smiles is 'QSAR ready SMILES structure used to generate the prediction';
comment on column mv_predicted_data.generic_substance_updated_at is 'prod_dsstox.generic_substances.updated_at';
comment on column mv_predicted_data.prop_type is 'Property type (e.g. predicted)';
comment on column mv_predicted_data.property_name is 'Property name (e.g. Boiling Point)';
comment on column mv_predicted_data.property_description is 'Property description (e.g. Temperature at which a chemical changes state from liquid to vapor at a given pressure)';
comment on column mv_predicted_data.model_id is 'ID of the model in qsar_models.models table (e.g. 123)';
comment on column mv_predicted_data.model_name is 'Name of the model (e.g. ACD_Prop_Polarizability)';
comment on column mv_predicted_data.source_name is 'Name of the model source (e.g. Percepta2023.1.2)';
comment on column mv_predicted_data.source_description is 'Descrption of the model source (e.g. <a href="https://www.acdlabs.com/products/percepta-platform/">Percepta from ACD/Labs</a> predicts physicochemical properties.)';
comment on column mv_predicted_data.experimental_value is 'Numerical experimental value from the model output';
comment on column mv_predicted_data.experimental_string is 'Text experimental value from the model output (e.g. 501-2000)';
comment on column mv_predicted_data.prediction_value is 'Numerical predicted value from the model';
comment on column mv_predicted_data.prediction_string is 'Text predicted value from the model (e.g. Inactive)';
comment on column mv_predicted_data.prediction_error is 'Error message from model output (e.g. Cannot calculate Boiling Point)';
comment on column mv_predicted_data.unit is 'Units for the predicted value';
comment on column mv_predicted_data.ad_method is 'Applicability domain method (e.g. Combined Applicability Domain)';
comment on column mv_predicted_data.ad_value is 'Applicability domain numerical value (e.g. 1.0)';
comment on column mv_predicted_data.ad_conclusion is 'Applicability domain conclusion (e.g. Inside AD)';
comment on column mv_predicted_data.ad_reasoning is 'Reasoning for the applicability domain conclusion (e.g. Inside training set (Global AD = 1) and good local representation (Local AD index = 1.0 &gt; 0.6))';
comment on column mv_predicted_data.ad_method_global is 'OPERA Global Index';
comment on column mv_predicted_data.ad_value_global is '0 or 1';
comment on column mv_predicted_data.ad_conclusion_global is 'Inside or Outside';
comment on column mv_predicted_data.ad_reasoning_global is 'Inside since value=1';
comment on column mv_predicted_data.export_date is 'When the materialized view was updated';
comment on column mv_predicted_data.data_version is 'Version of the materialized view (see public.materialized_view_version_history for description of changes made)';


select count(*) from mv_predicted_data;  ---- 16173839 for percepta
select count(distinct (dtxsid)) from mv_predicted_data;

-- update qsar_models.models set name_ccd=replace(name,'OPERA2.8','')  where name like '%OPERA2.8%';
update qsar_models.models set name_ccd=concat('OPERA_',name_ccd) where name like '%OPERA2.8';
select name,name_ccd from qsar_models.models where name like '%OPERA2.8';

-- update qsar_models.models set name_ccd=replace(name,'TEST5.1.3','')  where name like '%TEST%';
update qsar_models.models set name_ccd=concat('TEST_',name_ccd)  where name like '%TEST%';
select name,name_ccd from qsar_models.models where name like '%TEST%';

update qsar_models.models set name_ccd=name  where fk_source_id=7;
select name,name_ccd from qsar_models.models where fk_source_id=7;


select m.name,m.name_ccd,p.name_ccd from qsar_models.models m
join qsar_datasets.datasets d on d.name=m.dataset_name
join qsar_datasets.properties p on d.fk_property_id = p.id
where m.fk_source_id=3 and m.is_public=true;



update qsar_models.models set name_ccd=concat('Martin_2024_',replace(name,'-XGB Martin 2024',''))
where fk_source_id=3 and is_public=true;

select dtxsid,dtxsid,prop_type,unit,
       property_name,prop_value                                                                     as value,
       case when public_source_name is not null then public_source_name else ls_name end            as source,
       case when public_source_name is not null then public_source_description else ls_citation end as description
from "mv_experimental_data_old_v1.1" mv
where dtxsid='DTXSID3039242' and public_source_name is not null;


select dtxsid,dtxsid,prop_type,unit,
       property_name as name,
       prediction_value as value,source_name as source,
       source_description as description
from mv_predicted_data mv
where dtxsid='DTXSID3039242';


select count(distinct pd.fk_dsstox_records_id) from qsar_models.predictions_dashboard pd
join qsar_models.models m on pd.fk_model_id = m.id
       join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where fk_source_id=4 and dr.fk_dsstox_snapshot_id=2;

select  count(pd.fk_dsstox_records_id) from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models m on pd.fk_model_id = m.id
where fk_source_id=6;


-- update qsar_models.models set has_qmrf=false  where name like '%TEST5%';

select name, has_qmrf from qsar_models.models where name like '%OPERA2.8%';

select name from qsar_models.models ;



select distinct s.name
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.sources s on m.fk_source_id = s.id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where dr.fk_dsstox_snapshot_id=2 -- 2024-11-12 snapshot

select * from qsar_models.predictions_dashboard pd
join qsar_models.models m on pd.fk_model_id = m.id
join qsar_models.sources s on m.fk_source_id = s.id
where s.name='OPERA2.8';




select count (pd.id)
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6;

--get OPERA 2.8 unique chemicals loaded:
select count(distinct (pd.fk_dsstox_records_id))
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6;


select count(1) from qsar_models.prediction_reports pr;

select distinct s.name from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id;



select pr.id, s.name from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id
where pr.id=75328712;

-- Delete Percepta reports:
delete from qsar_models.prediction_reports where id>=27011093  and id<=75328711;

select pr.id from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id
where s.name='Percepta2023.1.2'
order by pr.id desc
limit 1;


-- 27011093  to 75328711


