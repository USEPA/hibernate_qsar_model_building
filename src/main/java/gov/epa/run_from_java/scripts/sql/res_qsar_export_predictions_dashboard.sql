-- Export all predictions for asif:
-- CREATE MATERIALIZED VIEW mv_predicted_data as
select
       row_number() over (order by dr.dtxsid, p."name",s.name) as id,
       dr.dtxsid,dr.dtxcid,dr.smiles,
       pd.canon_qsar_smiles,
       dr.generic_substance_updated_at,
       p.name_ccd as prop_name,
       'predicted' as prop_type,
       pc.name as prop_category,
       p.description as property_description,
       m.name_ccd as model_name,
       m.id as model_id,
       s.name as source_name,
       s.description as source_description,
       pd.experimental_value as prop_value_experimental,
       pd.experimental_string as prop_value_experimental_string,
--        pd.prediction_value as prediction_value,
       pd.prediction_value as prop_value,
       u.abbreviation_ccd as prop_unit,
--        prediction_string,
--        prediction_error,
       prediction_string as prop_value_string,
       prediction_error as prop_value_error,
       adm.name as AD_method,
       qpad.applicability_value as AD_value,
       qpad.conclusion as AD_conclusion,
       qpad.reasoning as AD_reasoning,
       case when s.name ='OPERA2.8' then 'OPERA Global Index' end as AD_method_global,
       qpad2.applicability_value as AD_value_global,
       qpad2.conclusion as AD_conclusion_global,
       qpad2.reasoning as AD_reasoning_global,
       m.has_qmrf,
       case when m.has_qmrf is true then CONCAT('https://ctx-api-dev.ccte.epa.gov/chemical/property/model/file/search/?modelId=',m.id,'&typeId=1') end as qmrf_url,
       current_date as export_date,
       '2.0.0' as data_version
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.sources s on m.fk_source_id = s.id
join qsar_datasets.datasets d on d."name" =m.dataset_name
join qsar_datasets.properties p on p.id=d.fk_property_id
join qsar_datasets.units u on u.id=d.fk_unit_id_contributor
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
left join qsar_models.qsar_predicted_ad_estimates qpad on pd.id = qpad.fk_predictions_dashboard_id and qpad.fk_ad_method_id=m.fk_ad_method
left join qsar_models.qsar_predicted_ad_estimates qpad2 on pd.id = qpad2.fk_predictions_dashboard_id and qpad2.fk_ad_method_id=1
left join qsar_models.ad_methods adm on m.fk_ad_method = adm.id
left join qsar_datasets.properties_in_categories pic on p.id = pic.fk_property_id
left join qsar_datasets.property_categories pc on pic.fk_property_category_id = pc.id

where dr.fk_dsstox_snapshot_id=2 -- 2024-11-12 snapshot
--   and s.name='Percepta2023.1.2'
  and (s.name='OPERA2.8' or s.name='Percepta2023.1.2')
--   and (s.name='OPERA2.8' or s.name='Percepta2023.1.2') --omit sample records from other software
--   and dr.dtxsid='DTXSID7021360'
-- and dr.dtxsid='DTXSID7020182' -- bisphenol-a
-- and dr.dtxcid='DTXCID505'
-- and dr.dtxsid='DTXSID00943887'
-- and dr.dtxsid='DTXSID3039242' -- benzene
-- and dr.dtxsid='DTXSID50281842' -- percepta not in mongo
-- and dr.dtxsid='DTXSID001000007' -- null values in summary table
-- and dr.dtxsid='DTXSID7020005'-- has TEST prediction outside AD for ST
-- and dr.dtxcid='DTXCID3054' -- salt
-- and p.name in ('Water solubility','Vapor pressure','Melting point','Boiling point','LogKow: Octanol-Water','Henry''s law constant')
-- order by dr.dtxsid, p."name",s.name -- this line slows things down when getting all records
-- order by dr.dtxsid -- this line slows things down when getting all records
-- limit 100
;

refresh materialized view "mv_predicted_data";
VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.predictions_dashboard;

VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.prediction_reports;
VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.qsar_predicted_neighbors;
VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.qsar_predicted_ad_estimates;

VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.dsstox_records;--done
VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.models;--done

GRANT SELECT ON "mv_predicted_data" TO arashid;
GRANT SELECT ON "mv_predicted_data" TO app_pentaho;

create index mv_predicted_data_dtxsid_index  on "mv_predicted_data" (dtxsid);
create index mv_predicted_data_prop_name_index  on "mv_predicted_data" (prop_name);

comment on materialized view "mv_predicted_data" is 'QSAR model predictions materialized view';
comment on column "mv_predicted_data".id is 'Autogenerated id for sorting';
comment on column "mv_predicted_data".dtxsid is 'DSSTox Substance id';
comment on column "mv_predicted_data".dtxcid is 'DSSTox Compound id';
comment on column "mv_predicted_data".smiles is 'SMILES structure used to generate the prediction';
comment on column "mv_predicted_data".canon_qsar_smiles is 'QSAR ready SMILES structure used to generate the prediction';
comment on column "mv_predicted_data".generic_substance_updated_at is 'prod_dsstox.generic_substances.updated_at';
comment on column "mv_predicted_data".prop_type is 'Property type (e.g. predicted)';
comment on column "mv_predicted_data".prop_category is 'Property category (e.g. Physchem)';
comment on column "mv_predicted_data".prop_name is 'Property name (e.g. Boiling Point)';
comment on column "mv_predicted_data".property_description is 'Property description (e.g. Temperature at which a chemical changes state from liquid to vapor at a given pressure)';
comment on column "mv_predicted_data".model_id is 'ID of the model in qsar_models.models table (e.g. 123)';
comment on column "mv_predicted_data".model_name is 'Name of the model (e.g. ACD_Prop_Polarizability)';
comment on column "mv_predicted_data".source_name is 'Name of the model source (e.g. Percepta2023.1.2)';
comment on column "mv_predicted_data".source_description is 'Descrption of the model source (e.g. <a href="https://www.acdlabs.com/products/percepta-platform/">Percepta from ACD/Labs</a> predicts physicochemical properties.)';
comment on column "mv_predicted_data".prop_value is 'Numerical predicted value from the model';
comment on column "mv_predicted_data".prop_value_string is 'Text predicted value from the model (e.g. Inactive)';
comment on column "mv_predicted_data".prop_value_error is 'Error message from model output (e.g. Cannot calculate Boiling Point)';
comment on column "mv_predicted_data".prop_value_experimental is 'Numerical experimental value from the model output';
comment on column "mv_predicted_data".prop_value_experimental_string is 'Text experimental value from the model output (e.g. 501-2000)';
comment on column "mv_predicted_data".prop_unit is 'Units for the predicted value';
comment on column "mv_predicted_data".ad_method is 'Applicability domain method (e.g. Combined Applicability Domain)';
comment on column "mv_predicted_data".ad_value is 'Applicability domain numerical value (e.g. 1.0)';
comment on column "mv_predicted_data".ad_conclusion is 'Applicability domain conclusion (e.g. Inside AD)';
comment on column "mv_predicted_data".ad_reasoning is 'Reasoning for the applicability domain conclusion (e.g. Inside training set (Global AD = 1) and good local representation (Local AD index = 1.0 &gt; 0.6))';
comment on column "mv_predicted_data".ad_method_global is 'OPERA Global Index';
comment on column "mv_predicted_data".ad_value_global is 'Binary score for the OPERA Global Index (e.g. 0 or 1)';
comment on column "mv_predicted_data".ad_conclusion_global is 'Global AD conclusion (e.g. Inside or Outside)';
comment on column "mv_predicted_data".ad_reasoning_global is 'Reasoning for the Global AD conclusion (e.g. Inside since value=1)';
comment on column "mv_predicted_data".has_qmrf is 'Whether or not there is a link for qmrf document';
comment on column "mv_predicted_data".qmrf_url is 'URL for qmrf pdf from the model file API';
comment on column "mv_predicted_data".export_date is 'When the materialized view was updated';
comment on column "mv_predicted_data".data_version is 'Version of the materialized view (see public.materialized_view_version_history for description of changes made)';


select count(*) from "mv_predicted_data";  ---- 16173839 for percepta
select count(distinct (dtxsid)) from "mv_predicted_data";

-- update qsar_models.models set name_ccd=replace(name,'OPERA2.8','')  where name like '%OPERA2.8%';
update qsar_models.models set name_ccd=concat('OPERA_',name_ccd) where name like '%OPERA2.8';
select name,name_ccd from qsar_models.models where name like '%OPERA2.8';

-- update qsar_models.models set name_ccd=replace(name,'TEST5.1.3','')  where name like '%TEST%';
update qsar_models.models set name_ccd=concat('TEST_',name_ccd)  where name like '%TEST%';
select name,name_ccd from qsar_models.models where name like '%TEST%';

update qsar_models.models set name_ccd=name  where fk_source_id=7;
select name,name_ccd from qsar_models.models where fk_source_id=7;


select m.name,m.name_ccd,p.name_ccd from qsar_models.models m
join qsar_datasets.datasets d on d.name=m.dataset_name
join qsar_datasets.properties p on d.fk_property_id = p.id
where m.fk_source_id=3 and m.is_public=true;



update qsar_models.models set name_ccd=concat('Martin_2024_',replace(name,'-XGB Martin 2024',''))
where fk_source_id=3 and is_public=true;

select dtxsid,dtxsid,prop_type,unit,
       property_name,prop_value                                                                     as value,
       case when public_source_name is not null then public_source_name else ls_name end            as source,
       case when public_source_name is not null then public_source_description else ls_citation end as description
from "mv_experimental_data_old_v1.1" mv
where dtxsid='DTXSID3039242' and public_source_name is not null;


select dtxsid,dtxsid,prop_type,prop_unit,
       prop_name as name,
       prop_value as value,source_name as source,
       source_description as description
from "mv_predicted_data" mv
where dtxsid='DTXSID3039242';


select count(distinct pd.fk_dsstox_records_id) from qsar_models.predictions_dashboard pd
join qsar_models.models m on pd.fk_model_id = m.id
       join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where fk_source_id=4 and dr.fk_dsstox_snapshot_id=2;

select  count(pd.fk_dsstox_records_id) from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models m on pd.fk_model_id = m.id
where fk_source_id=6;


-- update qsar_models.models set has_qmrf=false  where name like '%TEST5%';

select name, has_qmrf from qsar_models.models where name like '%OPERA2.8%';

select name from qsar_models.models ;



select distinct s.name
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.sources s on m.fk_source_id = s.id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where dr.fk_dsstox_snapshot_id=2; -- 2024-11-12 snapshot

select * from qsar_models.predictions_dashboard pd
join qsar_models.models m on pd.fk_model_id = m.id
join qsar_models.sources s on m.fk_source_id = s.id
where s.name='OPERA2.8';




select count (pd.id)
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6;

--get OPERA 2.8 unique chemicals loaded:
select count(distinct (pd.fk_dsstox_records_id))
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6;


--get OPERA 2.8 dtxcids loaded:
select count(distinct (dr.dtxcid))
from qsar_models.predictions_dashboard pd
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6 and dr.fk_dsstox_snapshot_id=2;


-- find dtxcids with less than 28 opera predictions
select dr.dtxcid, count(pd.id) as countPD
from qsar_models.predictions_dashboard pd
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
join qsar_models.models m on m.id=pd.fk_model_id
where m.fk_source_id=6 and dr.fk_dsstox_snapshot_id=2
group by dr.dtxcid
having count(pd.id)<28;



--get OPERA 2.8 unique dtxcids:
select distinct (dr.id)
from qsar_models.predictions_dashboard pd
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where m.fk_source_id=6;



select concat(pd.canon_qsar_smiles, chr(9),dr.id, chr(9),m.id) as pd_key from qsar_models.predictions_dashboard pd
			join qsar_models.models m on m.id=pd.fk_model_id
			join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
			where m.fk_source_id=6;


select count(1) from qsar_models.prediction_reports pr;

select distinct s.name from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id;

select * from qsar_models.models
limit 1 offset 1;


SELECT * from qsar_models.models m
order by m.name
OFFSET 1;


select pr.id, s.name from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id
where pr.id=75328712;

-- Delete Percepta reports:
delete from qsar_models.prediction_reports where id>=27011093  and id<=75328711;

select pr.id from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models on pd.fk_model_id = models.id
join qsar_models.sources s on models.fk_source_id = s.id
where s.name='Percepta2023.1.2'
order by pr.id desc
limit 1;


-- 27011093  to 75328711




select pd.canon_qsar_smiles, dr.id, m.id from qsar_models.predictions_dashboard pd
		join qsar_models.models m on m.id=pd.fk_model_id
    join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
		where m.fk_source_id=6 and dr.fk_dsstox_snapshot_id=2 limit 1000;


select  pd.id,dr.dtxsid, pr.file_html is null from qsar_models.predictions_dashboard pd
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
left join qsar_models.prediction_reports pr on pd.id = pr.fk_predictions_dashboard_id
where pd.id in (129829763,129829747,129829748,129829749,129829750,129829751,129829752,129829753,129829754,129829755,129829756,129829757,129829758,129829759,129829760,129829761,129829762,129829764,129829765,129829766,129829767,129829768,129829769,129829770,129829771,129829772,129829773,129829774,129829775,129829776,129829777,129829778,129829779,129829780,129829781,129829782,129829783,129829784,129829785,129829786,129829787,129829788,129829789,129829790,129829791,129829792,129829793,129829794,129829795,129829796,129829797,129829798,129829799,129829800,129829801,129829802,129829803,129829804,129829805,129829806,129829807,129829808,129829809,129829810,129829811,129829812,129829813,129829814,129829815,129829816,129829817,129829818,129829819,129829820,129829821,129829822,129829823,129829824,129829825,129829826,129829827,129829828,129829829,129829830,129829831,129829832,129829833,129829834,129829835,129829836,129829837,129829838,129829839,129829840,129829841,129829842,129829843,129829844,129829845,129829846,129829847,129829848,129829849,129829850,129829851,129829852,129829853,129829854,129829855,129829856,129829857,129829858,129829859,129829860,129829861,129829862,129829863,129829864,129829865,129829866,129829867,129829868,129829869,129829870,129829871,129829872,129829873,129829874,129829875,129829876,129829877,129829878,129829879,129829880,129829881,129829882,129829883,129829884,129829885,129829886,129829887,129829888,129829889,129829890,129829891,129829892,129829893,129829894,129829895,129829896,129829897,129829898,129829899,129829900,129829901,129829902,129829903,129829904,129829905,129829906,129829907,129829908,129829909,129829910,129829911,129829912,129829913,129829914,129829915,129829916,129829917,129829918,129829919,129829920,129829921,129829922,129829923,129829924,129829925,129829926,129829927,129829928,129829929,129829930,129829931,129829932,129829933,129829934,129829935,129829936,129829937,129829938,129829939,129829940,129829941,129829942,129829943,129829944,129829945,129829946,129829947,129829948,129829949,129829950,129829951,129829952,129829953,129829954,129829955,129829956,129829957,129829958,129829959,129829960,129829961,129829962,129829963,129829964,129829965,129829966,129829967,129829968,129829969,129829970,129829971,129829972,129829973,129829974,129829975,129829976,129829977,129829978,129829979,129829980,129829981,129829982,129829983,129829984,129829985,129829986,129829987,129829988,129829989,129829990,129829991,129829992,129829993,129829994,129829995,129829996,129829997,129829998,129829999,129830000,129830001,129830002,129830003,129830004,129830005,129830006,129830007,129830008,129830009,129830010,129830011,129830012,129830013,129830014,129830015,129830016,129830017,129830018,129830019,129830020,129830021,129830022,129830023,129830024,129830025,129830026,129830027,129830028,129830029,129830030,129830031,129830032,129830033,129830034,129830035,129830036,129830037,129830038,129830039,129830040,129830041,129830042,129830043,129830044,129830045,129830046,129830047,129830048,129830049,129830050,129830051,129830052,129830053,129830054,129830055,129830056,129830057,129830058,129830059,129830060,129830061,129830062,129830063,129830064,129830065,129830066,129830067,129830068,129830069,129830070,129830071,129830072,129830073,129830074,129830075,129830076,129830077,129830078,129830079,129830080,129830081,129830082,129830083,129830084,129830085,129830086,129830087,129830088,129830089,129830090,129830091,129830092,129830093,129830094,129830095,129830096,129830097,129830098,129830099,129830100,129830101,129830102,129830103,129830104,129830105,129830106,129830107,129830108,129830109,129830110,129830111,129830112,129830113,129830114,129830115,129830116,129830117,129830118,129830119,129830120,129830121,129830122,129830123,129830124,129830125,129830126,129830127,129830128,129830129,129830130,129830131,129830132,129830133,129830134,129830135,129830136,129830137,129830138,129830139,129830140,129830141,129830142,129830143,129830144,129830145,129830146,129830147,129830148,129830149,129830150,129830151,129830152,129830153,129830154,129830155,129830156,129830157,129830158,129830159,129830160,129830161,129830162,129830163,129830164,129830165,129830166,129830167,129830168,129830169,129830170,129830171,129830172,129830173,129830174,129830175,129830176,129830177,129830178,129830179,129830180,129830181,129830182,129830183,129830184,129830185,129830186,129830187,129830188,129830189,129830190,129830191,129830192,129830193,129830194,129830195,129830196,129830197,129830198,129830199,129830200,129830201,129830202,129830203,129830204,129830205,129830206,129830207,129830208,129830209,129830210,129830211,129830212,129830213,129830214,129830215,129830216,129830217,129830218,129830219,129830220,129830221,129830222,129830223,129830224,129830225,129830226,129830227,129830228,129830229,129830230,129830231,129830232,129830233,129830234,129830235,129830236,129830237,129830238,129830239,129830240,129830241,129830242,129830243,129830244,129830245,129830246,129830247,129830248,129830249,129830250,129830251,129830252,129830253,129830254,129830255,129830256,129830257,129841480,129841481,129841482,129841483,129841484,129841485,129841486,129841487,129841488,129841489,129841490,129841491,129841492,129841493,129841494,129841495,129841496,129841497,129841498,129841499,129841500,130262565,130262566,130262567,130262568,130262569,130262570,130262571,130262572,130262573,130262574,130262575,130262576,130262577,130262578,130262579,130262580,130262581,130262582,130262583,130262584,130262585,130262586,130262587,130262588,130262589,130262590,130262591,130262592,130262593,130262594,130262595,130262596,130262597,130262598,130262599,130262600,130262601,130262602,130262603,130262604,130262605,130262606,130262607,130262608,130262609,130262610,130262611,130262612,130262613,130262614,130262615,130262616,130262617,130262618,130262619,130262620,130262621,130262622,130262623,130262624,130262625,130262626,130262627,130262628,130262629,130262630,130262631,130262632,130262633,130262634,130262635,130262636,130262637,130262638,130262639,130262640,130262641,130262642,130262643,130262644,130262645,130262646,130262647,130262648,130262649,130262650,130262651,130262652,130262653,130262654,130262655,130262656,130262657,130262658,130262659,130262660,130262661,130262662,130262663,130262664,130262665,130262666,130262667,130262668,130262669,130262670,130262671,130262672,130262673,130262674,130262675,130262676,130262677,130262678,130262679,130262680,130262681,130262682,130262683,130262684,130262685,130262686,130262687,130262688,130262689,130262690,130262691,130262692,130262693,130262694,130262695,130262696,130262697,130262698,130262699,130262700,130262701,130262702,130262703,130262704,130262705,130262706,130262707,130262708,130262709,130262710,130262711,130262712,130262713,130262714,130262715,130262716,130262717,130262718,130262719,130262720,130262721,130262722,130262723,130262724,130262725,130262726,130262727,130262728,130262729,130262730,130262731,130262732,130262733,130262734,130262735,130262736,130262737,130262738,130262739,130262740,130262741,130262742,130262743,130262744,130262745,130262746,130262747,130262748,130262749,130262750,130262751,130262752,130262753,130262754,130262755,130262756,130262757,130262758,130262759,130262760,130262761,130262762,130262763,130262764,130262765,130262766,130262767,130262768,130262769,130262770,130262771,130262772,130262773,130262774,130262775,130262776,130262777,130262778,130262779,130262780,130262781,130262782,130262783,130262784,130262785,130262786,130262787,130262788,130262789,130262790,130262791,130262792,130262793,130262794,130262795,130262796,130262797,130262798,130262799,130262800,130262801,130262802,130262803,130262804,130262805,130262806,130262807,130262808,130262809,130262810,130262811,130262812,130262813,130262814,130262815,130262816);



select count(*) from mv_predicted_data mv;



