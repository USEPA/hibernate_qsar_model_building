-- Export reports
-- CREATE MATERIALIZED VIEW mv_predicted_reports as
select
       row_number() over (order by dr.dtxsid, p.name,s.name) as id,
       dr.dtxsid,
       dr.dtxcid,
       m.id as model_id,
       m.name_ccd as model_name,
       p.name_ccd as prop_name,
       pc.name as prop_category,
       s.name as source_name,
       convert_from(pr.file_json,'UTF-8') as report_json,
       convert_from(pr.file_html,'UTF-8') as report_html,
       current_date as export_date,
       '1.1.0' as data_version
from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pd.id = pr.fk_predictions_dashboard_id
join qsar_models.models m on m.id=pd.fk_model_id
join qsar_models.sources s on m.fk_source_id = s.id
join qsar_datasets.datasets d on d."name" =m.dataset_name
join qsar_datasets.properties p on p.id=d.fk_property_id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id=dr.id
left join qsar_datasets.properties_in_categories pic on p.id = pic.fk_property_id
left join qsar_datasets.property_categories pc on pic.fk_property_category_id = pc.id

where dr.fk_dsstox_snapshot_id=2
and s.name!='Percepta2023.1.2'
-- and s.name='TEST5.1.3'
and dr.dtxsid='DTXSID7020182';


refresh materialized view mv_predicted_reports;

GRANT SELECT ON mv_predicted_reports TO arashid;
GRANT SELECT ON mv_predicted_reports TO app_pentaho;
create index mv_predicted_reports_dtxsid_index  on mv_predicted_reports (dtxsid);
comment on materialized view mv_predicted_reports is 'QSAR model prediction json and html reports materialized view';

comment on column mv_predicted_reports.id is 'Autogenerated id for sorting';
comment on column mv_predicted_reports.dtxsid is 'DSSTox Substance id';
comment on column mv_predicted_reports.dtxcid is 'DSSTox Compound id';
comment on column mv_predicted_reports.model_id is 'ID of the model in qsar_models.models table (e.g. 123)';
comment on column mv_predicted_reports.model_name is 'Name of the model (e.g. ACD_Prop_Polarizability)';
comment on column mv_predicted_reports.property_name is 'Property name (e.g. Boiling Point)';
comment on column mv_predicted_reports.source_name is 'Name of the model source (e.g. Percepta2023.1.2)';
comment on column mv_predicted_reports.report_json is 'JSON prediction report file';
comment on column mv_predicted_reports.report_html is 'HTML prediction report file';

comment on column mv_predicted_reports.export_date is 'When the materialized view was updated';
comment on column mv_predicted_reports.data_version is 'Version of the materialized view (see public.materialized_view_version_history for description of changes made)';



VACUUM (ANALYZE, VERBOSE, FULL) qsar_models.prediction_reports;

-- Look at a percepta report
select * from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models m on pd.fk_model_id = m.id
where fk_source_id=7 and m.name='ACD_Prop_Molar_Volume'
limit 1;



select report_html from public.mv_predicted_reports where model_name='TEST_DM_LC50';

select count(*) from public.mv_predicted_reports;  ---- 16173839 for percepta
select count(distinct (dtxsid)) from public.mv_predicted_reports;


select count (pr.id)
from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard  pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models m on pd.fk_model_id = m.id
where m.fk_source_id=6;

select file_html,m.name_ccd
from qsar_models.prediction_reports pr
join qsar_models.predictions_dashboard  pd on pr.fk_predictions_dashboard_id = pd.id
join qsar_models.models m on pd.fk_model_id = m.id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where m.fk_source_id=6 and dr.dtxsid='DTXSID00943887';

SELECT c.reltuples::bigint AS estimate
FROM   pg_class c
JOIN   pg_namespace n ON n.oid = c.relnamespace
-- WHERE  c.relname = 'prediction_reports'
  WHERE  c.relname = 'predictions_dashboard'
AND    n.nspname = 'qsar_models';


--find ones missing reports:
-- to do determine which pd.ids are missing reports and then delete them and reload
-- select  count(pd.id)  from qsar_models.predictions_dashboard pd
select  distinct dr.dtxcid from qsar_models.predictions_dashboard pd
left join qsar_models.prediction_reports pr on pd.id = pr.fk_predictions_dashboard_id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
join qsar_models.models m on pd.fk_model_id = m.id
join qsar_models.sources s on m.fk_source_id = s.id
where pr.id is null and s.name='OPERA2.8';

--query of a query
select * from qsar_models.models m where
m.name  in ( select m2.name from qsar_models.models m2
join qsar_models.sources s on m2.fk_source_id = s.id
-- where s.name='OPERA2.8'
where m2.fk_source_id=6
);


select  concat('1',chr(9),'2',chr(9),'3');




--pd keys with missing reports
select  concat(pd.canon_qsar_smiles,chr(9),dr.id,chr(9),m.id) as pd_key, pd.id as pd_id from qsar_models.predictions_dashboard pd
left join qsar_models.prediction_reports pr on pd.id = pr.fk_predictions_dashboard_id
join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
join qsar_models.models m on pd.fk_model_id = m.id
join qsar_models.sources s on m.fk_source_id = s.id
where pr.id is null and s.name='OPERA2.8';

select concat(pd.canon_qsar_smiles,chr(9),dr.id,chr(9),m.id) as pd_key from qsar_models.predictions_dashboard pd
	join qsar_models.models m on m.id=pd.fk_model_id
	join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
	where m.fk_source_id=6 and dr.fk_dsstox_snapshot_id=2
limit 500 offset 100000;

select pd.canon_qsar_smiles, dr.id, pd.fk_model_id
from qsar_models.predictions_dashboard pd
            join qsar_models.dsstox_records dr on pd.fk_dsstox_records_id = dr.id
where fk_model_id in (1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,
                      1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1491,
                      1492,1493,1494)
limit 50000 offset 0;







select id from qsar_models.models where fk_source_id=6 order by id;

